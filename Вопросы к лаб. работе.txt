1. В том, что можно удобно изменять версии файла в случае необходимости + удобство работать в команде
2. git log --pretty=oneline выведит историю проэкта в режиме одной строки
3. Можно использовать аллиасы, которые являются псевдонимами/сокращениями команд
4. можно задать необходимые атрибуты для команды git log
5. Использовать целесообразно тег, когда ведётся разработка в несколько этапов. С помощью тегов легче возвращаться к коммитам
6. переименовать выбранный коммит (на котором находится HEAD) git commit --ammend -m ""
7. Для того, чтобы несколько разработчиков могли одновременно работать с файлом
8. В том случае, если в одном файле, но в разных ветках, находится разное содержание
9. Своеобразная ассоциация комманд с нужным текстом
10. Вывод истории (log) в одну строку каждая версия git log --pretty=oneline


(Вопросы
1) В чем заключается удобство использования системы контроля версий
Git?
2) Как изменить формат выводимой истории версий?
3) Как сократить время набора команд в системе Git?
4) Если необходимо выделить в истории группы версий, с определенными
изменениями, как удобнее всего это сделать?
5) Что такое тегирование, и для чего его целесообразно использовать?
6) Как можно исправить коммит, если он оказался неверным?
7) Для чего используется ветвление?
8) В каком случае необходимо исправлять файлы, при слиянии веток?
9) Что такое алиасы? Для чего они применяются?
10) Что такое режим «одной строки»?)